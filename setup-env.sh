#!/bin/bash

# Mental Health App Environment Setup Script
# This script helps you create your .env file with Supabase credentials

echo "🧠 Mental Health App Environment Setup"
echo "======================================"
echo ""

# Check if .env already exists
if [ -f ".env" ]; then
    echo "⚠️  .env file already exists!"
    read -p "Do you want to overwrite it? (y/N): " overwrite
    if [[ ! $overwrite =~ ^[Yy]$ ]]; then
        echo "Setup cancelled. Your existing .env file was preserved."
        exit 0
    fi
fi

echo "📝 Please provide your Supabase project details:"
echo ""

# Get Supabase URL
read -p "Enter your Supabase Project URL (e.g., https://your-project.supabase.co): " supabase_url

# Validate URL format
if [[ ! $supabase_url =~ ^https://.*\.supabase\.co$ ]]; then
    echo "❌ Invalid Supabase URL format. Please use: https://your-project.supabase.co"
    exit 1
fi

# Get Supabase Anon Key
read -p "Enter your Supabase Anon Key (starts with 'eyJ'): " supabase_anon_key

# Validate anon key format
if [[ ! $supabase_anon_key =~ ^eyJ[A-Za-z0-9_-]+\.[A-Za-z0-9_-]+\.[A-Za-z0-9_-]+$ ]]; then
    echo "❌ Invalid Supabase Anon Key format. Please check your key."
    exit 1
fi

echo ""
echo "🔧 Creating .env file..."

# Create .env file
cat > .env << EOF
# Supabase Configuration
# Generated by setup-env.sh on $(date)
SUPABASE_URL=$supabase_url
SUPABASE_ANON_KEY=$supabase_anon_key

# App Configuration
APP_NAME=Mental Health Support
APP_VERSION=1.0.0

# Feature Flags
ENABLE_PUSH_NOTIFICATIONS=true
ENABLE_ANALYTICS=false
ENABLE_CRASH_REPORTING=false

# Development Settings
DEBUG_MODE=true
LOG_LEVEL=debug

# Audio Settings
DEFAULT_VOLUME=0.7
ENABLE_SOUND=true
ENABLE_HAPTICS=true

# Notification Settings
YELLOW_STATUS_SOUND_DURATION=300
RED_STATUS_SOUND_DURATION=500
EOF

echo "✅ .env file created successfully!"
echo ""
echo "📋 Your environment configuration:"
echo "   • Supabase URL: $supabase_url"
echo "   • Supabase Anon Key: ${supabase_anon_key:0:20}..."
echo "   • App Name: Mental Health Support"
echo "   • Debug Mode: Enabled"
echo ""

# Test Supabase connection
echo "🔍 Testing Supabase connection..."
echo "   This will verify your credentials are working..."

# Create a temporary test file
cat > test-supabase.js << 'EOF'
const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseAnonKey = process.env.SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
    console.error('❌ Missing Supabase credentials in .env file');
    process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function testConnection() {
    try {
        const { data, error } = await supabase.from('users').select('count').limit(1);
        
        if (error) {
            if (error.code === 'PGRST116') {
                console.log('✅ Supabase connection successful! (Table does not exist yet - this is expected)');
            } else {
                console.error('❌ Supabase connection failed:', error.message);
                process.exit(1);
            }
        } else {
            console.log('✅ Supabase connection successful!');
        }
    } catch (err) {
        console.error('❌ Connection test failed:', err.message);
        process.exit(1);
    }
}

testConnection();
EOF

# Run the test
if node test-supabase.js 2>/dev/null; then
    echo "✅ Supabase connection verified!"
else
    echo "⚠️  Could not verify Supabase connection (this is normal if tables don't exist yet)"
fi

# Clean up test file
rm -f test-supabase.js

echo ""
echo "🎉 Environment setup complete!"
echo ""
echo "📚 Next steps:"
echo "   1. Run the database schema: docs/DATABASE_SCHEMA.md"
echo "   2. Start building your app: npm start"
echo "   3. Run on iOS: npx react-native run-ios"
echo ""
echo "🔒 Security note: Your .env file contains sensitive credentials."
echo "   Make sure it's in your .gitignore file (it should be already)."
echo "" 